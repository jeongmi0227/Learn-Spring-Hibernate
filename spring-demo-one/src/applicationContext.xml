<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- load the properties file: sport.properties-->
    <context:property-placeholder location="classpath:sport.properties"/>
    <!-- Define your beans here -->
    <!-- Define the dependency -->

    <!--
    Bean Scopes
    - Scope refers to the lifecycle of a bean
    Default scope is singleton
        * What is a singleton?
        - Spring container creates only one instances of the bean, by default
        - It is cached in memory
        - All requests for the bean
         - will return a SHARED reference to the SAME bean

    prototype scope: new object for each request
    prototype scope is good for keeping track fo stateful data.
    - How long does the bean live?

    - How many instances are created?

    - How is the bean shared?

    -->
    <bean id="myFortuneService"
          class="com.jeongmi0227.springdemo.HappyFortuneService">
    </bean>

    <bean id="myRandomFortuneService"
          class="com.jeongmi0227.springdemo.RandomFortuneService">

    </bean>

    <bean id="myCoach"
          class="com.jeongmi0227.springdemo.TrackCoach">
        <!--set up constuctor injection-->

        <constructor-arg ref="myRandomFortuneService"/>
    </bean>

    <!--
	Add a logger config to see logging messages.
	- For more detailed logs, set values to "FINEST"
	- For info on logging levels, see: http://www.vogella.com/tutorials/Logging/article.html
 -->
    <bean id="myLoggerConfig" class="com.jeongmi0227.springdemo.MyLoggerConfig" init-method="initLogger">
        <property name="rootLoggerLevel" value="FINE" />
        <property name="printedLoggerLevel" value="FINE"/>
    </bean>

    <bean id="myCricketCoach"
          class ="com.jeongmi0227.springdemo.CricketCoach">
        <!--set up setter injection-->
        <property name="fortuneService" ref="myRandomFortuneService"/>
        <!-- inject literal values -->
        <property name="emailAddress" value="${foo.email}"/>
        <property name="team" value="${foo.team}"/>
    </bean>
</beans>





